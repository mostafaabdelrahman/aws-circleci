version: 2.1
  # Start rollback exercise
commands:
  destroy_environments:
    steps:
      - run:
          name: "Delete CloudFormation Stack"
          command: |
            aws cloudformation delete-stack --stack-name myfirsttest
          when: on_fail

jobs:
  create_infrastructure:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run:
          name: "Create CloudFormation Stack"
          command: |
            aws cloudformation create-stack --stack-name myfirsttest --template-body file://stack.yml
      - run:
          name: "Sleep between create and delete stack"
          command: |
            sleep 120
      - run:
          name: "Simulate Error"
          command: |
            return 0
      - destroy_environments
  # end of rollback exercise 


  # Cloudformation to create stack
  # run-cloudformation:
  #   docker:
  #     - image: amazon/aws-cli
  #   steps:
  #     - checkout
  #     - run:
  #         name: "Create CloudFormation Stack"
  #         command: |
  #           aws cloudformation create-stack --stack-name myfirsttest --template-body file://stack.yml
  
  # configure infra using ansible
  # configure-environment:
  #   docker:
  #     - image: python:3.7-alpine3.11
  #   # add env var for ssh key checking bypass
  #   environment:
  #     ANSIBLE_HOST_KEY_CHECKING: False
  #   steps:
  #   - checkout
  #   - add_ssh_keys:
  #       fingerprints: ["4f:66:70:dc:47:8d:20:bf:ed:b3:1e:a2:1c:92:9d:bd"]
  #   - run:
  #       name: "Install Ansible using apk"
  #       command: |
  #         apk add --update ansible
  #   - run:
  #       name: "Configure Node.js on new ubuntu server"
  #       command: |
  #         ansible-playbook main-remote.yml -i inventory

workflows:
  welcome:
    # Run the welcome/run job in its own container
    jobs:
      #- run-cloudformation
      # - configure-environment
      - create_infrastructure